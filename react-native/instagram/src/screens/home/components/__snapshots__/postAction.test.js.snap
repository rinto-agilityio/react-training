// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostAction component Renders correctly for like image 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/liked.png",
        }
      }
      style={
        Object {
          "height": 24,
          "marginRight": 10,
          "width": 24,
        }
      }
    />
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/comment.png",
        }
      }
      style={
        Object {
          "height": 24,
          "marginRight": 10,
          "width": 24,
        }
      }
    />
  </View>
</View>
`;

exports[`PostAction component Renders correctly for new image 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/like.png",
        }
      }
      style={
        Object {
          "height": 24,
          "marginRight": 10,
          "width": 24,
        }
      }
    />
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/comment.png",
        }
      }
      style={
        Object {
          "height": 24,
          "marginRight": 10,
          "width": 24,
        }
      }
    />
  </View>
</View>
`;
